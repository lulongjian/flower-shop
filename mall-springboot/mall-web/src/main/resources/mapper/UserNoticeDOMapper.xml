<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mall.dao.UserNoticeDOMapper">
  <resultMap id="BaseResultMap" type="com.example.mall.domain.UserNoticeDO">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="notice" jdbcType="INTEGER" property="notice" />
    <result column="is_read" jdbcType="INTEGER" property="isRead" />
  </resultMap>

  <resultMap id="VOBaseResultMap" type="com.example.mall.domain.vo.UserNoticeVO">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="notice" jdbcType="INTEGER" property="notice" />
    <result column="is_read" jdbcType="INTEGER" property="isRead" />
    <result column="title" jdbcType="VARCHAR" property="title"/>
    <result column="type" jdbcType="INTEGER" property="type"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    <result column="content" jdbcType="LONGVARCHAR" property="content"/>
  </resultMap>

  <select id="getUserNoticeList" resultMap="VOBaseResultMap">
    select n.content, n.title, n.create_time, n.update_time, n.id as notice
    from notice n left join user_notice un on (n.id = un.notice and un.user_id = #{userId})
    <trim prefix="where" prefixOverrides="and|or">
      <if test="isRead != null and isRead == 1">
        and un.is_read = #{isRead}
      </if>
      <if test="isRead != null and isRead == 0">
        and un.is_read is null
      </if>
    </trim>
    order by n.create_time desc
  </select>
</mapper>